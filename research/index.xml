<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Research on Odin Hoff Gardå</title><link>https://odinhg.github.io/research/</link><description>Recent content in Research on Odin Hoff Gardå</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 29 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://odinhg.github.io/research/index.xml" rel="self" type="application/rss+xml"/><item><title>RotaTouille: Rotation Equivariant Deep Learning for Contours</title><link>https://odinhg.github.io/research/rotatouille/</link><pubDate>Fri, 29 Aug 2025 00:00:00 +0000</pubDate><guid>https://odinhg.github.io/research/rotatouille/</guid><description>&lt;p>RotaTouille is a deep learning framework for learning from contour data that achieves both rotation and cyclic shift equivariance through complex-valued circular convolution.&lt;/p></description></item><item><title>Core Bifiltration</title><link>https://odinhg.github.io/research/core_bifiltration/</link><pubDate>Thu, 28 Aug 2025 00:00:00 +0000</pubDate><guid>https://odinhg.github.io/research/core_bifiltration/</guid><description>&lt;p>The &lt;strong>core bifiltration&lt;/strong> is a parameter-free &lt;strong>density-based bifiltration&lt;/strong> interleaved with the well-known multicover bifiltration. This makes it suitable for extracting topological features from &lt;strong>noisy point cloud data&lt;/strong>. In particulat, both bifiltrations enjoy stability with respect to the Prohorov distance between the point measures. For point clouds in $\mathbb{R}^n$, a smaller and more efficient version based on the Delaunay complex also exists: The Delaunay Core bifiltration is implemented in the multipers library making it accessible to both researchers and practitioners.&lt;/p>
&lt;p>&lt;strong>For a quick start:&lt;/strong> check out the &lt;a href="https://davidlapous.github.io/multipers/notebooks/delaunay_core_bifiltration.html">multipers documentation&lt;/a> for a tutorial on how to use the Delaunay Core bifiltration in Python.&lt;/p></description></item><item><title>Monoidal Rips: Stable Multiparameter Filtrations of Directed Networks</title><link>https://odinhg.github.io/research/monoidal_rips/</link><pubDate>Wed, 27 Aug 2025 00:00:00 +0000</pubDate><guid>https://odinhg.github.io/research/monoidal_rips/</guid><description>&lt;p>Relaxing the metric assumption in topological data analysis allows for the analysis of directed networks and asymmetric data. The &lt;strong>monoidal Rips filtration&lt;/strong> is a generalization of the Vietoris-Rips filtration to weighted directed graphs. To allow for directed edges, we work with filtered simplicial sets instead of filtered simplicial complexes. We also allow values in a class of lattices, which includes both the real numbers and products of totally ordered sets. This makes our construction applicable to both single-parameter and multiparameter persistence. We introduce a generalized network distance, and prove stability results for the persistent homology of the monoidal Rips filtration with respect to this distance.&lt;/p></description></item><item><title>ICML 2023 Topological Deep Learning Challenge : Design and Results</title><link>https://odinhg.github.io/research/icml23/</link><pubDate>Wed, 20 Aug 2025 00:00:00 +0000</pubDate><guid>https://odinhg.github.io/research/icml23/</guid><description>&lt;p>The ICML 2023 Topological Deep Learning Challenge was a competition that aimed to benchmark and promote the implementation of topological deep learning methods. I implemented the SCoNe layer from the paper &lt;a href="https://arxiv.org/abs/2102.10058">&amp;ldquo;Principled Simplicial Neural Networks for Trajectory Prediction&amp;rdquo;&lt;/a> as part of this challenge, and placed second in the simplicial complex category. The implementation is now part of the &lt;a href="https://pyt-team.github.io/topomodelx/">TopoModelX&lt;/a> library, and a tutorial notebook is available in the &lt;a href="https://pyt-team.github.io/topomodelx/notebooks/simplicial/scone_train.html">TopoModelX documentation&lt;/a>.&lt;/p></description></item><item><title>TopoX: A Suite of Python Packages for Machine Learning on Topological Domains</title><link>https://odinhg.github.io/research/topox/</link><pubDate>Wed, 20 Aug 2025 00:00:00 +0000</pubDate><guid>https://odinhg.github.io/research/topox/</guid><description>&lt;p>The &lt;strong>TopoX&lt;/strong> implementation paper describing the three packages: TopoNetX, TopoEmbedX and TopoModelX enabling machine learning on topological domains that extend graphs such as hypergraphs, simplicial, cellular, path and combinatorial complexes.&lt;/p></description></item></channel></rss>